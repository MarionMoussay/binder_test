library(ggplot2)
library(ggplot2)
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# Print the gear variable of mtcars
print(mtcars$gear)
# Assign the length of mtcars to some_var
some_var <- length(mtcars)
# Uncomment this to see the plot
# print(qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5)))
# Uncomment this to see the plot
print(qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5)))
data(chocolates)
head(sensochoc)
library(SensoMineR)
data(chocolates)
head(sensochoc)
summary(sensochoc)
summary(sensochoc, maxsum = 10)
nb <- 4
type(nb)
typeof(nb)
library(SensoMineR)
data(chocolates)
nb <- "10"
summary(sensochoc, maxsum = nb)
library(SensoMineR)
data(chocolates)
nb <- "blabla"
summary(sensochoc, maxsum = nb)
library(SensoMineR)
data(chocolates)
nb <- "blabla"
summary(sensochoc, maxsum = nb)
summary(sensochoc, maxsum = 0)
?summary
summary(sensochoc, maxsum = "42000")
summary(sensochoc, maxsum = "5")
nb <- 10
typeof(nb)
nb <- "blabla"
typeof(nb)
devtools::install_github("Sebastien-Le/SensoLearnR")
devtools::install_github("Sebastien-Le/YesSiR")
plot(sensochoc)
library(SensoMineR)
data(chocolates)
plot(sensochoc$Rank)
plot(sensochoc$CocoaF)
plot(sensochoc$Vanilla)
hist(sensochoc$CocoaA)
install.packages("devtools")
devtools::install_github("Sebastien-Le/YesSiR")
install.packages("devtools")
?YesSir
library(YesSiR)
library(YesSiR)
devtools::install_github("Sebastien-Le/YesSiR")
inst
install.packages("githubinstall")
library(githubinstall)
githubinstall("YesSiR")
install.packages('bookdown')
# or the development version on Github
remotes::install_github('rstudio/bookdown')
install.packages("devtools")
install.packages("devtools")
install.packages("remotes")
install.packages("remotes")
install.packages("remotes")
install.packages("remotes")
library("remotes")
remotes::install_github("Sebastien-Le/YesSiR")
install.packages("remotes")
library(remotes)
remotes::install_github("MaximeSaland/YesSiR")
L'objectif, rappelons le, est de visualiser des similitudes entre individus qui formeraient plus ou moins un groupe homogène. La similitude entre deux points peut être mesurée par leur distance sur le plan. La distance entre deux individus est la distance euclidienne qu'on écrit comme :
data <- read.table("data/ELF.DBF")
View(data)
data <- read.table("data/elf.txt")
View(data)
data <- read.table("data/elf.txt", header = TRUE)
View(data)
data <- read.table("data/elf.txt", header = TRUE, row.names = 1)
data <- data[5,]
write.csv(data, "data/elf.csv")
On choisit le centre de gravité qui est alors directement lié au nuage de points lui-même. Le poids de chaque individu est le même pour une ACP et ainsi on le définit tel quel :
data <- read.table("data/elf.txt", header = TRUE, row.names = 1)
data <- data[1:5,]
View(data)
write.csv(data, "data/elf.csv")
read.table("data/elf.csv")
View(data)
data <- read.table("data/vins.txt", header = TRUE, row.names = 1)
View(data)
data <- data[1:5,]
write.csv(data, "data/5vins.csv")
read.table("data/5vins.csv")
data <- read.table("data/vins.txt", header = TRUE, row.names = 1)
data <- data[1:6,]
write.csv(data, "data/5vins.csv")
read.table("data/5vins.csv")
library(FactoMineR)
PCA(read.table("data/5vins.csv"))
library(FactoMineR)
summary(data)
View(data)
PCA(data)
cr(data)
scale(data)
data_cent <- scale(data)
View(data_cent)
data_cent <- as.data.frame(scale(data))
View(data_cent)
data_cent
round(data_cent, 3)
write.csv(data, "data/5vins_scale.csv")
knitr::opts_chunk$set(echo = FALSE)
experts <- read.table("data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("/data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table(".//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table(".///data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table(".//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("binder_test/data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
get.wd()
getwd()
experts <- read.table("./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat
)
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat)
relativeFilePath <- "//data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat)
getwd()
relativeFilePath <- "//data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat)
file.exists(relativeFilePath)
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
getwd()
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
relativeFilePath <- "\data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
relativeFilePath <- "data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
experts <- read.table("~/data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("~./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("~data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("~//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
setwd(getwd())
experts <- read.table("../data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts$Seance <- as.factor(experts$Seance)
experts$Rang <- as.factor(experts$Rang)
experts$Produit <- as.factor(experts$Produit)
experts <- read.table("../data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts$Seance <- as.factor(experts$Seance)
experts$Rang <- as.factor(experts$Rang)
experts$Produit <- as.factor(experts$Produit)
citrus.lm <- lm(Citrus~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
citrus.lm <- lm(Citron~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
citrus.lm <- lm(Citron~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
View(experts)
citrus.lm <- lm(AromeCitron~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
To explain the sensory attribute _Citrus_ (dependent variable) with respect to the main effects _Product_, _Panelist_, _Session_, and their first-order interactions (independent variables), the following ANOVA model is considered:
