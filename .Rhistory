experts$Rang <- as.factor(experts$Rang)
experts$Produit <- as.factor(experts$Produit)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
View(experts)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
experts$Product <- as.factor(experts$Product)
citrus.lm <- lm(Citrus~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
anova(citrus.lm)
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
names(res.decat)
res.decat$resF
options(contrasts=c("contr.sum","contr.sum"))
summary.lm(citrus.lm)
levels(experts$Product)
res.decat$resT$Angel
View(res.decat)
View(experts)
res.decat$adjmean
res.decat$tabF
res.decat$adjmean
scale(res.decat$adjmean)
mat <- res.decat$adjmean
mat.cr <- scale(res.decat$adjmean)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, 4, byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
res.decat$adjmean
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n,12 , byrow=TRUE)
mat
n <- nrow(mat)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
distG
sum(distG/ n)
n
p
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
sum(distG/ n)
PCA(mat)
PCA(mat)$svd
mat
scale(mat)
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
sum(distG/n)
sum(distG/n-1)
sum(distG)
sum(distG/n)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
experts$Product <- as.factor(experts$Product)
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
mat <- res.decat$adjmean
mat.cr <- scale(res.decat$adjmean)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
sum(distG/n)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
p
matG <- matrix(colMeans(mat.cr), n, p, byrow=TRUE)
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/ n)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(scale(mat, scale=FALSE)), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((scale(mat, scale=FALSE) - matG)^2, 2, sum)
sum(distG/ n)
n <- nrow(mat.cr)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/ n)
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
eleves <- read.table("data/eleves_notes.txt", sep=" ", header=TRUE, row.names = 1)
matG <- matrix(colMeans(el.cr), n, 4, byrow=TRUE)
el.cr <- scale(eleves)
matG <- matrix(colMeans(el.cr), n, 4, byrow=TRUE)
distG <- apply((el.cr - matG)^2, 1, sum)
sum(distG/ n)
distG <- apply((el.cr - matG)^2, 1, sum)
matG
el.cr
n <- nrow(eleves)
# Calcul inertie totale
matG <- matrix(colMeans(el.c), n, 4, byrow=TRUE)
# Calcul inertie totale
matG <- matrix(colMeans(el.c), n, 4, byrow=TRUE)
matG <- matrix(colMeans(el.cr), n, 4, byrow=TRUE)
distG <- apply((el.cr - matG)^2, 1, sum)
sum(distG/ n)
var(el.cr)
el.cr
var <- c(var(el.cr[,1]))
var
sqrtt(1)
sqrt(1)
n <- nrow(mat.cr)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/n)
# Centers of gravity
matG <- matrix(colMeans(mat), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/n)
diag(var(mat))
# Matrix of distances
distG <- apply((mat.cr - matG)^2/diag(var(mat)), 1, sum)
sum(distG/n)
# Matrix of distances
distG <- apply((mat.cr - matG)^2/diag(var(mat))^2, 1, sum)
sum(distG/n)
# Matrix of distances
distG <- apply((mat - matG)^2/diag(var(mat))^2, 1, sum)
sum(distG/n)
n <- nrow(mat.cr)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
sum(distG/n)
distG
matG
mat.cr
ncol(matG)
ncol(distG)
distG
ncol(as.data.frame(distG))
nrow(as.data.frame(distG))
sum(distG)/n
n
sum(distG)
matG
# Matrix of distances
distG <- apply((mat.cr - matG)^2/t(diag(var(mat.cr))), 2, sum)
t(diag(var(mat.cr)))
# Matrix of distances
distG <- apply((mat.cr - matG)^2/t(diag(var(mat.cr))), 1, sum)
(mat.cr - matG)^2
as.data.frame((mat.cr - matG)^2)
# Matrix of distances
distG <- apply((mat.cr - matG)^2/diag(var(mat.cr)), 1, sum)
sum(distG)/n
diag(var(mat.cr))
n <- nrow(mat)
p <- ncol(mat)
matG <- matrix(colMeans(mat), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat - matG)^2, 1, sum)
sum(distG)/n
mat.var <- var(mat)
sum(diag(mat.var))
mat.var <- var(mat)*(n-1)/n
sum(diag(mat.var))
mat.cr <- scale(res.decat$adjmean)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG)/n
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
library(FactoMineR)
res.pca <- PCA(res.decat$adjmean)
names(res.pca)
eleves <- read.table("data/eleves_notes.txt", sep=" ", header=TRUE, row.names = 1)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
experts$Product <- as.factor(experts$Product)
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
mat <- res.decat$adjmean
n <- nrow(mat)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat - matG)^2, 1, sum)
sum(distG)/n
mat.var <- var(mat)*(n-1)/n
sum(diag(mat.var))
mat.cr <- scale(res.decat$adjmean)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG)/n
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
mat.cr <- scale(mat)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG)/n
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
library(FactoMineR)
res.pca <- PCA(res.decat$adjmean)
names(res.pca)
eigen(cor(res.decat$adjmean))$vectors
res.pca$svd$V
eigen(cor(res.decat$adjmean))$vectors[,1:5]
res.pca$svd$V
plot(res.pca)
plot(res.pca$var)
plot.PCA(res.pca,choix="ind")
plot.PCA(res.pca,choix="var")
knitr::opts_chunk$set(echo = TRUE)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
View(consumers)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$Session <- as.factor(consumers$Session)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$Rank <- as.factor(consumers$Rank)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$Product <- as.factor(consumers$Product)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$product <- as.factor(consumers$product)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$product <- as.factor(consumers$product)
consumers$consumer <- as.factor(consumers$consumer)
library(SensoMineR)
library(SensoMineR)
res.decat <- decat(consumers,formul="~product+consumer",firstvar=3, lastvar=ncol(consumers),graph=FALSE)
res.decat$resF
library(SensoMineR)
res.decat <- decat(consumers,formul="~product+consumer",firstvar=3, lastvar=ncol(consumers),graph=FALSE)
res.decat$resF
res.decat$resF
res.decat$resT
res.decat$tabF
res.decat$tabT
levels(consumers$product)
hist(res.decat$resF)
res.decat$resF
res.decat$resF
tab <- as.data.frame(res.decat$resF)
View(tab)
hist(tab$`P-value`)
hist(tab)
library(ggplot2)
row.names(tab)
ggplot(tab, aes(x=row.names(tab), y=P-value))+geom_histogram()
ggplot(tab, aes(x=row.names(tab), y="P-value"))+geom_histogram()
tab <- data.frame(row.names(as.data.frame(res.decat$resF))res.decat$resF$`P-value`)
tab <- data.frame(row.names(as.data.frame(res.decat$resF)),res.decat$resF$`P-value`)
colnames(tab) <- c("product", "pval")
ggplot(tab, aes(x=product, y=p-val))+geom_histogram()
ggplot(tab, aes(x=product, y=pval))+geom_histogram()
ggplot(tab, aes(x=product, y=pval))+geom_point()
ggplot(tab, aes(x=product, y=pval))+geom_bar()
ggplot(tab, aes(x=product, y=pval))+geom_line()
ggplot(tab, aes(x=pval, y=product))+geom_point
ggplot(tab, aes(x=pval, y=product))+geom_point()
citrus.lm <- lm(Citrus~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
anova(citrus.lm)
volcan <- read.table("data/volcan.txt", sep=" ")
View(volcan)
volcan <- read.table("data/volcan.txt", sep=" ", header = TRUE)
volcan <- read.table("data/volcan.txt", sep=" ", header = TRUE)
View(volcan)
volcan <- read.table("data/volcan.txt", sep=" ", header = TRUE)
volcan <- read.table("data/volcan.txt", sep=" ")
View(volcan)
read.table("data/volcan.txt")
volcan <- read.table("data/volcan.txt", sep=" ")
View(volcan)
volcan <- read.table("data/volcan.txt", sep=" ", header=TRUE)
volcan <- read.table("data/volcan.txt", sep=" ", header=TRUE)
volcan.lm <- lm(Year~B1+B2+B3,data=volcan)
anova(volcan)
anova(volcan.lm)
volcan.lm
volcan.lm <- lm(Year~.,data=volcan)
volcan.lm
spicy.lm <- lm(Spicy~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
anova(spicy.lm)
117.503/11
View(spicy.lm)
(1292.54/11)/(117.503/287)
1292.54/11
(1292.54/11)/393.7/287
(1292.54/11)/(393.7/(288-12))
(1292.54/11)/(393.7/(288-121))
(1292.54/11)/(393.7/(288-122))
(1292.54/11)/(393.7/(288-13))
(1292.54/11)/(393.7/(121))
F <- 1292.54/11
MS <- (1292.54/11)/(393.7/121)
F
MS
library(FactoMineR)
data(wine)
colnames(wine)
plot.PCA(wine.pca,col.quali="gray48")
plot.PCA(wine.pca,col.quali="gray48",habillage=2,col.hab=c("gray","azure4","black","gainsboro"))
wine.pca <- PCA(wine,quali.sup=1:2,quanti.sup=30:31,graph=FALSE)
wine.pca <- PCA(wine,quali.sup=1:2,quanti.sup=30:31,graph=FALSE)
plot.PCA(wine.pca,col.quali="gray48")
plot.PCA(wine.pca,col.quali="gray48",habillage=2,col.hab=c("gray","azure4","black","gainsboro"))
res.panellipse <- panellipse(experts,col.p=4,col.j=1,firstvar=5,level.search.desc=1)
?barrow
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
library(FactoMineR)
res.pca <- PCA(mat)
names(res.pca)
panellipse(experts,col.p=4,col.j=1,firstvar=5,level.search.desc=1)
?fasnt
res.fasnt<-fasnt(smoothies,first="nappe",sep.word=";")
data(smoothies)
smoothies
?PCA
?decat
?PCA
?decat
?PCA
wine.pca <- PCA(wine,quali.sup=1:2,quanti.sup=30:31,graph=FALSE)
wine.pca$call
View(wine.pca)
fviz_eig(res.pca, addlabels=TRUE, ylim=c(0,50))
library(factoextra)
fviz_eig(res.pca, addlabels=TRUE, ylim=c(0,50))
?panellipse
View(wine)
knitr::opts_chunk$set(echo = TRUE)
data <- ("data/perfumes_comments.csv")
data <- read.csv("data/perfumes_comments.csv")
data <- read.csv("data/perfumes_comments.csv", sep"\t")
data <- read.csv("data/perfumes_comments.csv", sep="\t")
View(data)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
library(SensoLearnR)
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
library(FactoMineR)
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
View(res.textual)
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,+ 2,sum)>=5]
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
napping <- read.table("perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
View(napping)
napping_words <- cbind(napping,row_profile[rownames(napping),])
View(row_profile)
napping_words <- cbind(napping,row_profile[rownames(napping),])
View(napping_words)
row_profile[rownames(napping),]
res.textual
res.textual$cont.table
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
View(napping_words)
napping=napping_words
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
which(napping == napping_words)
which(napping = napping_words)
colnames(napping)
colnames(napping_words)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
View(napping)
View(napping_words)
View(napping_words)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
?napping_words
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
View(napping_words)
View(napping)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
# Tableau de contingence et filtrage eff>5
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
View(words_select)
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
# Tableau de contingence et filtrage eff>5
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
View(row_profile)
?apply(array, margin, ...)
?apply
?apply
?apply
knitr::opts_chunk$set(echo = TRUE)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
# Tableau de contingence et filtrage eff>5
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
library(FactoMineR)
napping <- read.table("data/perfumes_napping.csv",header=TRUE,sep=",",dec=".",row.names=1)
data <- read.csv("data/perfumes_comments.csv", sep="\t", header=TRUE, quote="\"")
# Tableau de contingence et filtrage eff>5
res.textual <- textual(data, num.text=3, contingence.by=1, sep.word=";")
words_select <- res.textual$cont.table[,apply(res.textual$cont.table,2,sum)>=5]
row_profile <- words_select/apply(words_select,MARGIN=1,FUN=sum)
apply(words_select,MARGIN=1,FUN=sum)
napping_words <- cbind(napping,row_profile[rownames(napping),])
colnames(napping_words)
length(colnames(napping_words))
colnames(napping)
colnames(napping_word)[61]
colnames(napping_words)[61]
colnames(napping_words)[68]
colnames(napping_words)[60]
colnames(napping_words)[61]
colnames(napping_words)[69]
colnames(napping_words)[110]
colnames(napping_words)[130]
colnames(napping_words)[129]
colnames(napping_words)[125]
colnames(napping_words)[120]
colnames(napping_words)[121]
colnames(napping_words)
# MFA sur matrice finale
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
# MFA sur matrice finale
res.mfa <- MFA(napping_words,group=c(rep(2,60),68),type=rep("c",61), num.group.sup=61,name.group=c(paste("S",1:60,sep=""),"Words"),graph=FALSE)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
plot.MFA(res.mfa,choix="var",select=colnames(row_profile),cex=0.8)
