nb <- "blabla"
summary(sensochoc, maxsum = nb)
summary(sensochoc, maxsum = 0)
?summary
summary(sensochoc, maxsum = "42000")
summary(sensochoc, maxsum = "5")
nb <- 10
typeof(nb)
nb <- "blabla"
typeof(nb)
devtools::install_github("Sebastien-Le/SensoLearnR")
devtools::install_github("Sebastien-Le/YesSiR")
plot(sensochoc)
library(SensoMineR)
data(chocolates)
plot(sensochoc$Rank)
plot(sensochoc$CocoaF)
plot(sensochoc$Vanilla)
hist(sensochoc$CocoaA)
install.packages("devtools")
devtools::install_github("Sebastien-Le/YesSiR")
install.packages("devtools")
?YesSir
library(YesSiR)
library(YesSiR)
devtools::install_github("Sebastien-Le/YesSiR")
inst
install.packages("githubinstall")
library(githubinstall)
githubinstall("YesSiR")
install.packages('bookdown')
# or the development version on Github
remotes::install_github('rstudio/bookdown')
install.packages("devtools")
install.packages("devtools")
install.packages("remotes")
install.packages("remotes")
install.packages("remotes")
install.packages("remotes")
library("remotes")
remotes::install_github("Sebastien-Le/YesSiR")
install.packages("remotes")
library(remotes)
remotes::install_github("MaximeSaland/YesSiR")
L'objectif, rappelons le, est de visualiser des similitudes entre individus qui formeraient plus ou moins un groupe homogène. La similitude entre deux points peut être mesurée par leur distance sur le plan. La distance entre deux individus est la distance euclidienne qu'on écrit comme :
data <- read.table("data/ELF.DBF")
View(data)
data <- read.table("data/elf.txt")
View(data)
data <- read.table("data/elf.txt", header = TRUE)
View(data)
data <- read.table("data/elf.txt", header = TRUE, row.names = 1)
data <- data[5,]
write.csv(data, "data/elf.csv")
On choisit le centre de gravité qui est alors directement lié au nuage de points lui-même. Le poids de chaque individu est le même pour une ACP et ainsi on le définit tel quel :
data <- read.table("data/elf.txt", header = TRUE, row.names = 1)
data <- data[1:5,]
View(data)
write.csv(data, "data/elf.csv")
read.table("data/elf.csv")
View(data)
data <- read.table("data/vins.txt", header = TRUE, row.names = 1)
View(data)
data <- data[1:5,]
write.csv(data, "data/5vins.csv")
read.table("data/5vins.csv")
data <- read.table("data/vins.txt", header = TRUE, row.names = 1)
data <- data[1:6,]
write.csv(data, "data/5vins.csv")
read.table("data/5vins.csv")
library(FactoMineR)
PCA(read.table("data/5vins.csv"))
library(FactoMineR)
summary(data)
View(data)
PCA(data)
cr(data)
scale(data)
data_cent <- scale(data)
View(data_cent)
data_cent <- as.data.frame(scale(data))
View(data_cent)
data_cent
round(data_cent, 3)
write.csv(data, "data/5vins_scale.csv")
knitr::opts_chunk$set(echo = FALSE)
experts <- read.table("data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("/data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table(".//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table(".///data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table(".//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("binder_test/data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
get.wd()
getwd()
experts <- read.table("./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat
)
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat)
relativeFilePath <- "//data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat)
getwd()
relativeFilePath <- "//data/SensoQDA_cocktail.csv"
file.exists(relativeFilePat)
file.exists(relativeFilePath)
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
getwd()
relativeFilePath <- "./data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
relativeFilePath <- "\data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
relativeFilePath <- "data/SensoQDA_cocktail.csv"
file.exists(relativeFilePath)
experts <- read.table("~/data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("~./data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("~data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts <- read.table("~//data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
setwd(getwd())
experts <- read.table("../data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts$Seance <- as.factor(experts$Seance)
experts$Rang <- as.factor(experts$Rang)
experts$Produit <- as.factor(experts$Produit)
experts <- read.table("../data/SensoQDA_cocktail.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts$Seance <- as.factor(experts$Seance)
experts$Rang <- as.factor(experts$Rang)
experts$Produit <- as.factor(experts$Produit)
citrus.lm <- lm(Citrus~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
citrus.lm <- lm(Citron~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
citrus.lm <- lm(Citron~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
View(experts)
citrus.lm <- lm(AromeCitron~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
To explain the sensory attribute _Citrus_ (dependent variable) with respect to the main effects _Product_, _Panelist_, _Session_, and their first-order interactions (independent variables), the following ANOVA model is considered:
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
experts$Seance <- as.factor(experts$Seance)
experts$Rang <- as.factor(experts$Rang)
experts$Produit <- as.factor(experts$Produit)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ";", dec=".", quote = "\"")
View(experts)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
experts$Product <- as.factor(experts$Product)
citrus.lm <- lm(Citrus~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
anova(citrus.lm)
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
names(res.decat)
res.decat$resF
options(contrasts=c("contr.sum","contr.sum"))
summary.lm(citrus.lm)
levels(experts$Product)
res.decat$resT$Angel
View(res.decat)
View(experts)
res.decat$adjmean
res.decat$tabF
res.decat$adjmean
scale(res.decat$adjmean)
mat <- res.decat$adjmean
mat.cr <- scale(res.decat$adjmean)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, 4, byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
res.decat$adjmean
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n,12 , byrow=TRUE)
mat
n <- nrow(mat)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
distG
sum(distG/ n)
n
p
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
sum(distG/ n)
PCA(mat)
PCA(mat)$svd
mat
scale(mat)
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
sum(distG/n)
sum(distG/n-1)
sum(distG)
sum(distG/n)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
experts$Product <- as.factor(experts$Product)
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
mat <- res.decat$adjmean
mat.cr <- scale(res.decat$adjmean)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
sum(distG/n)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
p
matG <- matrix(colMeans(mat.cr), n, p, byrow=TRUE)
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/ n)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(scale(mat, scale=FALSE)), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((scale(mat, scale=FALSE) - matG)^2, 2, sum)
sum(distG/ n)
n <- nrow(mat.cr)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 2, sum)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/ n)
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
eleves <- read.table("data/eleves_notes.txt", sep=" ", header=TRUE, row.names = 1)
matG <- matrix(colMeans(el.cr), n, 4, byrow=TRUE)
el.cr <- scale(eleves)
matG <- matrix(colMeans(el.cr), n, 4, byrow=TRUE)
distG <- apply((el.cr - matG)^2, 1, sum)
sum(distG/ n)
distG <- apply((el.cr - matG)^2, 1, sum)
matG
el.cr
n <- nrow(eleves)
# Calcul inertie totale
matG <- matrix(colMeans(el.c), n, 4, byrow=TRUE)
# Calcul inertie totale
matG <- matrix(colMeans(el.c), n, 4, byrow=TRUE)
matG <- matrix(colMeans(el.cr), n, 4, byrow=TRUE)
distG <- apply((el.cr - matG)^2, 1, sum)
sum(distG/ n)
var(el.cr)
el.cr
var <- c(var(el.cr[,1]))
var
sqrtt(1)
sqrt(1)
n <- nrow(mat.cr)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/n)
# Centers of gravity
matG <- matrix(colMeans(mat), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG/n)
diag(var(mat))
# Matrix of distances
distG <- apply((mat.cr - matG)^2/diag(var(mat)), 1, sum)
sum(distG/n)
# Matrix of distances
distG <- apply((mat.cr - matG)^2/diag(var(mat))^2, 1, sum)
sum(distG/n)
# Matrix of distances
distG <- apply((mat - matG)^2/diag(var(mat))^2, 1, sum)
sum(distG/n)
n <- nrow(mat.cr)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
sum(distG/n)
distG
matG
mat.cr
ncol(matG)
ncol(distG)
distG
ncol(as.data.frame(distG))
nrow(as.data.frame(distG))
sum(distG)/n
n
sum(distG)
matG
# Matrix of distances
distG <- apply((mat.cr - matG)^2/t(diag(var(mat.cr))), 2, sum)
t(diag(var(mat.cr)))
# Matrix of distances
distG <- apply((mat.cr - matG)^2/t(diag(var(mat.cr))), 1, sum)
(mat.cr - matG)^2
as.data.frame((mat.cr - matG)^2)
# Matrix of distances
distG <- apply((mat.cr - matG)^2/diag(var(mat.cr)), 1, sum)
sum(distG)/n
diag(var(mat.cr))
n <- nrow(mat)
p <- ncol(mat)
matG <- matrix(colMeans(mat), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat - matG)^2, 1, sum)
sum(distG)/n
mat.var <- var(mat)
sum(diag(mat.var))
mat.var <- var(mat)*(n-1)/n
sum(diag(mat.var))
mat.cr <- scale(res.decat$adjmean)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG)/n
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
library(FactoMineR)
res.pca <- PCA(res.decat$adjmean)
names(res.pca)
eleves <- read.table("data/eleves_notes.txt", sep=" ", header=TRUE, row.names = 1)
experts <- read.table("data/perfumes_qda_experts.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
experts$Session <- as.factor(experts$Session)
experts$Rank <- as.factor(experts$Rank)
experts$Product <- as.factor(experts$Product)
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
mat <- res.decat$adjmean
n <- nrow(mat)
p <- ncol(mat)
# Centers of gravity
matG <- matrix(colMeans(mat), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat - matG)^2, 1, sum)
sum(distG)/n
mat.var <- var(mat)*(n-1)/n
sum(diag(mat.var))
mat.cr <- scale(res.decat$adjmean)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG)/n
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
mat.cr <- scale(mat)
n <- nrow(mat.cr)
p <- ncol(mat.cr)
# Centers of gravity
matG <- matrix(colMeans(mat.cr), n, p , byrow=TRUE)
# Matrix of distances
distG <- apply((mat.cr - matG)^2, 1, sum)
sum(distG)/n
mat.var.cr <- var(mat.cr)
sum(diag(mat.var.cr))
library(FactoMineR)
res.pca <- PCA(res.decat$adjmean)
names(res.pca)
eigen(cor(res.decat$adjmean))$vectors
res.pca$svd$V
eigen(cor(res.decat$adjmean))$vectors[,1:5]
res.pca$svd$V
plot(res.pca)
plot(res.pca$var)
plot.PCA(res.pca,choix="ind")
plot.PCA(res.pca,choix="var")
knitr::opts_chunk$set(echo = TRUE)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
View(consumers)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$Session <- as.factor(consumers$Session)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$Rank <- as.factor(consumers$Rank)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$Product <- as.factor(consumers$Product)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$product <- as.factor(consumers$product)
consumers <- read.table("data/perfumes_qda_consumers.csv", header = TRUE, sep = ",", dec=".", quote = "\"")
consumers$product <- as.factor(consumers$product)
consumers$consumer <- as.factor(consumers$consumer)
library(SensoMineR)
library(SensoMineR)
res.decat <- decat(consumers,formul="~product+consumer",firstvar=3, lastvar=ncol(consumers),graph=FALSE)
res.decat$resF
library(SensoMineR)
res.decat <- decat(consumers,formul="~product+consumer",firstvar=3, lastvar=ncol(consumers),graph=FALSE)
res.decat$resF
res.decat$resF
res.decat$resT
res.decat$tabF
res.decat$tabT
levels(consumers$product)
hist(res.decat$resF)
res.decat$resF
res.decat$resF
tab <- as.data.frame(res.decat$resF)
View(tab)
hist(tab$`P-value`)
hist(tab)
library(ggplot2)
row.names(tab)
ggplot(tab, aes(x=row.names(tab), y=P-value))+geom_histogram()
ggplot(tab, aes(x=row.names(tab), y="P-value"))+geom_histogram()
tab <- data.frame(row.names(as.data.frame(res.decat$resF))res.decat$resF$`P-value`)
tab <- data.frame(row.names(as.data.frame(res.decat$resF)),res.decat$resF$`P-value`)
colnames(tab) <- c("product", "pval")
ggplot(tab, aes(x=product, y=p-val))+geom_histogram()
ggplot(tab, aes(x=product, y=pval))+geom_histogram()
ggplot(tab, aes(x=product, y=pval))+geom_point()
ggplot(tab, aes(x=product, y=pval))+geom_bar()
ggplot(tab, aes(x=product, y=pval))+geom_line()
ggplot(tab, aes(x=pval, y=product))+geom_point
ggplot(tab, aes(x=pval, y=product))+geom_point()
citrus.lm <- lm(Citrus~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
anova(citrus.lm)
volcan <- read.table("data/volcan.txt", sep=" ")
View(volcan)
volcan <- read.table("data/volcan.txt", sep=" ", header = TRUE)
volcan <- read.table("data/volcan.txt", sep=" ", header = TRUE)
View(volcan)
volcan <- read.table("data/volcan.txt", sep=" ", header = TRUE)
volcan <- read.table("data/volcan.txt", sep=" ")
View(volcan)
read.table("data/volcan.txt")
volcan <- read.table("data/volcan.txt", sep=" ")
View(volcan)
volcan <- read.table("data/volcan.txt", sep=" ", header=TRUE)
volcan <- read.table("data/volcan.txt", sep=" ", header=TRUE)
volcan.lm <- lm(Year~B1+B2+B3,data=volcan)
anova(volcan)
anova(volcan.lm)
volcan.lm
volcan.lm <- lm(Year~.,data=volcan)
volcan.lm
spicy.lm <- lm(Spicy~Product+Panelist+Session+Product:Panelist+Product:Session+Panelist:Session,data=experts)
anova(spicy.lm)
117.503/11
View(spicy.lm)
(1292.54/11)/(117.503/287)
1292.54/11
(1292.54/11)/393.7/287
(1292.54/11)/(393.7/(288-12))
(1292.54/11)/(393.7/(288-121))
(1292.54/11)/(393.7/(288-122))
(1292.54/11)/(393.7/(288-13))
(1292.54/11)/(393.7/(121))
F <- 1292.54/11
MS <- (1292.54/11)/(393.7/121)
F
MS
library(FactoMineR)
data(wine)
colnames(wine)
plot.PCA(wine.pca,col.quali="gray48")
plot.PCA(wine.pca,col.quali="gray48",habillage=2,col.hab=c("gray","azure4","black","gainsboro"))
wine.pca <- PCA(wine,quali.sup=1:2,quanti.sup=30:31,graph=FALSE)
wine.pca <- PCA(wine,quali.sup=1:2,quanti.sup=30:31,graph=FALSE)
plot.PCA(wine.pca,col.quali="gray48")
plot.PCA(wine.pca,col.quali="gray48",habillage=2,col.hab=c("gray","azure4","black","gainsboro"))
res.panellipse <- panellipse(experts,col.p=4,col.j=1,firstvar=5,level.search.desc=1)
?barrow
library(SensoMineR)
res.decat <- decat(experts,formul="~Product+Panelist",firstvar=5, lastvar=ncol(experts),graph=FALSE)
library(FactoMineR)
res.pca <- PCA(mat)
names(res.pca)
panellipse(experts,col.p=4,col.j=1,firstvar=5,level.search.desc=1)
?fasnt
res.fasnt<-fasnt(smoothies,first="nappe",sep.word=";")
data(smoothies)
smoothies
?PCA
?decat
?PCA
?decat
?PCA
wine.pca <- PCA(wine,quali.sup=1:2,quanti.sup=30:31,graph=FALSE)
wine.pca$call
View(wine.pca)
fviz_eig(res.pca, addlabels=TRUE, ylim=c(0,50))
library(factoextra)
fviz_eig(res.pca, addlabels=TRUE, ylim=c(0,50))
?panellipse
